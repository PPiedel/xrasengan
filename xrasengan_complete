# -*- mode: sh -*-

#
# Copyright 2014 Geyslan G. Bem
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# xrasengan bash completion
#

#!/bin/bash

list_contains() {
	local list=$1
	local value=$2

	for word in $list; do
		[ $word == $value ] && return 0
	done
	return 1
}

update_outputs_connected() {
	if ! [[ $force ]]; then
		OPTS="$(xrandr | awk '/ connected/ {print $1}')"
		return
	fi

	# Workaround to turn on connected outputs that may be in suspend mode
	# and hence shown as disconnected
	local times=2
	local seconds=1

	if [[ $1 ]]; then
		times=$2
	fi

	if [[ $2 ]]; then
		seconds=$1
	fi

	while [ $times -gt 0 ]; do
		$xrandr 1> /dev/null
		sleep $seconds
		let times-=1
	done
	OPTS="$(xrandr | awk '/ connected/ {print $1}')"
}

update_outputs_connected_inactive() {
	OPTS="$(xrandr | awk '/ connected/ && /\)$/ {print $1}')"
}

update_outputs_active() {
	OPTS="$(xrandr | awk '/mm$/ {print $1}')"
}

update_output_modes() {
	local output=$1
	OPTS=$(xrandr | awk '/'"$output"'/ {f=1;next} !/^ /{f=0} f {print $1}')
}

_xrasengan()
{
	local cur prev prev_prev OPTS
	COMREPLY=()
	cur="${COMP_WORDS[COMP_CWORD]}"
	prev="${COMP_WORDS[COMP_CWORD-1]}"
	prev_prev="${COMP_WORDS[COMP_CWORD-2]}"

	if list_contains "${COMP_WORDS[*]}" "--force" || list_contains "${COMP_WORDS[*]}" "-f"; then
		force="force"
	else
		force=""
	fi

	case $cur in
	--*)
		OPTS=$(echo "--force --list-all --list-connected --list-active --list-disconnected --clone --turn-on --turn-off --left" | sort)
		COMPREPLY=( $(compgen -W "${OPTS[*]}" -- $cur) )
		return 0
		;;
	-*)
		OPTS=$(echo "-f -la -lc -lac -ld -c -on -off -l -r -a -b -p -h" | sort)
		COMPREPLY=( $(compgen -W "${OPTS[*]}" -- $cur) )
		return 0
		;;

	esac

	update_outputs_connected

	case $prev in
	--clone | -c)
		update_outputs_active
		COMPREPLY=( $(compgen -W "${OPTS[*]}" -- $cur) )
		return 0
		;;
	--turn-on | -on)
		update_outputs_connected_inactive
		COMPREPLY=( $(compgen -W "${OPTS[*]}" -- $cur) )
		return 0
		;;
	--turn-off | -off)
		update_outputs_active
		if [ $(echo $OPTS | wc -w) -eq 1 ]; then
			OPTS=""
		fi
		COMPREPLY=( $(compgen -W "${OPTS[*]}" -- $cur) )
		return 0
		;;
	--left | -l)
		update_outputs_active
		COMPREPLY=( $(compgen -W "${OPTS[*]}" -- $cur) )
		return 0
		;;
	esac

	case $prev_prev in
	--clone | -c)
		if [ $(echo $OPTS | wc -w) -eq 1 ]; then
			OPTS=""
		fi
		COMPREPLY=( $(compgen -W "${OPTS[*]}" -- $cur) )
		return 0
		;;
	--turn-on | -on)
		update_output_modes
		COMPREPLY=( $(compgen -W "${OPTS[*]}" -- $cur) )
		return 0
		;;
	--left | -l)
		COMPREPLY=( $(compgen -W "${OPTS[*]}" -- $cur) )
		return 0
		;;
	esac

}
complete -F _xrasengan xrasengan
